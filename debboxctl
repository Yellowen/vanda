#!/usr/bin/env python
# -----------------------------------------------------------------------------
#    Debbox - Modern administration panel for Debian GNU/Linux
#    Copyright (C) 2011 Some Hackers In Town
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
# -----------------------------------------------------------------------------

# patching python standard threading
from gevent import monkey; monkey.patch_all()

import sys
from optparse import OptionParser

from debbox.core.daemon import Debbox


parser = OptionParser()
parser.set_defaults(
    debug=False,
    conf="/etc/debbox/debbox.conf",
    piddir="/var/run/",
    settings='debbox.settings',
    foreground=True,
)

parser.add_option('--shell', dest='shell',
                  action="store_true",
                  help="Execute a python shell (ipython), in the patched env.")
parser.add_option('-c', dest='conf',
                  help="Use CONF config file. default is" + \
                  "/etc/debbox/debbox.conf")
parser.add_option('--debug', dest='debug', action="store_true",
                  help="Activate debug mode.")
parser.add_option('--settings', dest='settings',
                  help="Django settings.py file")
parser.add_option('--syncdb', dest='database', action="store_true",
                  help="Sync DATABASE database.")
parser.add_option('--syncdb-new', dest='dbnew', action="store_true",
                  help="Rmove old DATABASE and sync it again.")
parser.add_option('--pythonpath', dest='pythonpath',
                  help="Add given path to python path.\n")

options, args = parser.parse_args()
valid_action = False

#if options.pythonpath:
#    sys.path.insert(1, options.pythonpath)
import os
os.environ["DJANGO_SETTINGS_MODULE"] = options.settings

try:
    daemon = Debbox(options)
except Debbox.CantFindConfigFile:
    print "Error: Can't find '%s' configuration file." % options.conf
    sys.exit(1)

if options.shell:
    from IPython.Shell import IPShellEmbed
    sys.argv = []
    ipshell = IPShellEmbed()
    ipshell()
    sys.exit(0)

# Try to syncdb
if options.database or options.dbnew:
    synced = None
    if options.dbnew:
        daemon.syncdb(fresh=True)
        synced = 1

    if options.database and not synced:
        daemon.syncdb()
    valid_action = True
