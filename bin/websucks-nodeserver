#! /usr/bin/env node

/* Command line parser */
var cli = require('commander');

cli
    .version('0.17.0')
    .usage('[options]')
    .option('-d, --debug', 'Debug mode', false)
    .option('-s, --socket [type]', 'Unix socket [address]', '/tmp/websucks.sock')
    .option('-p, --port <n>', 'Websocket server port', parseInt, 9000)
    .option('-h, --host [ip]', 'Websocket server host IP', 'localhost')
    .parse(process.argv);

var socketio = require('socket.io');
var net = require('net');
var events = require('events');

// Event emitter
var emitter = new events.EventEmitter();

// Unix socket server
var unix = net.createServer(function(socket) {
    console.log('Unix server connected');
    socket.on('end', function() {
	console.log('Unix server disconnected');
    });
    
    socket.on('data', function(data){
	emitter.emit("new_event", data)
    });
});

unix.listen(cli.socket, function() {
    console.log("Unix socket server started on %s . . .", cli.socket);
});


// Websocket server
function onlisten(){
    console.log("Websocket server started on http://%s:%s/ . . .", cli.host, cli.port.toString());
};
var io = socketio.listen((cli.host, cli.port), {'transports': ['websocket'],
						'log': cli.debug,
						'browser client gzip': true
					       }, onlisten);

io.sockets.on('connection', function (socket) {
    socket.on('message', function (data) {
	// TODO: implement pull
    });

    emitter.on("new_event", function(data){
	socket.send(data);
    });
    socket.on('disconnect', function () {
	console.log("disconnected");
    });
});
